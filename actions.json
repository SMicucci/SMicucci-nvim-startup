{
	"completa_codice": {
		"type": "chat",
		"opts": {
			"template": "{{filetype}}\n{{input}}\n```",
			"strategy": "replace",
			"params": {
				"model": "gpt-4o-mini",
				"temperature": 0.1,
				"stop": ["```"],
				"messages": [
					{"role": "system", "content": "Comportati come una programma che emula un programmatore esperto ad un input:\n<linguaggio>\n<codice input>\n---\n\nrielabora e completa il codice producendo questo output:\n<codice input>\n<continuazione codice>\n---"},
					{"role": "user", "content": "c\nint main()\n---"},
					{"role": "assistant", "content": "int main()\n{\n\tprintf(\"Hello world!\");\n\treturn 0;\n}\n---"},
					{"role": "user", "content": "javascript\n//json post\nawait fetch('/api/temp',\n---"},
					{"role": "assistant", "content": "//json post\nawait fetch('/api/temp', {\n\tmethod: 'POST',\n\theaders: {\n\t\t'Content-Type': 'application/json'\n\t},\n\tbody: JSON.stringify(data)\n});\n---"}
				]
			}
		}
	},
	"crea_commento": {
		"type": "chat",
		"opts": {
			"template": "{{filetype}}\n{{input}}",
			"strategy": "prepend",
			"params": {
				"model": "gpt-4o-mini",
				"temperature": 0.1,
				"stop": ["---"],
				"messages": [
					{"role": "system", "content": "Comportati come un generatore minimale di commenti doxygen.\nIl programma prende in input:\n<linguaggio>\n<function>\n\nrestituisce in output:\n<commento doxygen>\n---"},
					{"role": "user", "content": "c\nvoid swap(int* a, int* b)\n{\n\nint temp = *a;\n\t*a = *b;\n\t*b = temp;\n}"},
					{"role": "assistant", "content": "/// @brief Scambia i valori di due interi.\n/// @param a Puntatore al primo intero.\n/// @param b Puntatore al secondo intero.\n---"},
					{"role": "user", "content": "javascript\nfunction async postJson(dest, data)\n{\n\tawait fetch(dest, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(data)\n\t});\n}"},
					{"role": "assistant", "content": "/// @brief Invia una richiesta POST con dati JSON a un'API.\n/// @param dest L'URL di destinazione per la richiesta.\n/// @param data I dati da inviare, che verranno convertiti in formato JSON.\n---"}
				]
			}
		}
	},
	"riassumi": {
		"type": "chat",
		"opts": {
			"title": "îž€ Riassunto Codice",
			"template": "Spiega il seguente codice:\n{{input}}\n\nDai una descrizione breve e concisa di cosa fa il codice utilizzando una formattazione markdown\n",
			"strategy": "display",
			"params": {
				"model": "gpt-4o-mini",
				"stop": [ "---" ]
			}
		}
	},
	"add_tests": {
		"type": "chat",
		"opts": {
			"template": "Implement tests for the following code.\n\nCode:\n```{{filetype}}\n{{input}}\n```\n\nTests:\n```{{filetype}}",
			"strategy": "append",
			"params": {
				"model": "gpt-4o-mini",
				"stop": [
					"```"
				]
			}
		}
	},
	"fix_bugs": {
		"type": "chat",
		"opts": {
			"template": "Fix bugs in the below code\n\nCode:\n```{{filetype}}\n{{input}}\n```\n\nFixed code:\n```{{filetype}}",
			"strategy": "edit",
			"params": {
				"model": "gpt-4o-mini",
				"stop": [
					"```"
				]
			}
		}
	}
}
